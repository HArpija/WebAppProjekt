@page "/delete/{id:int}"
@using WebAppProjekt.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;


 <h3>Obriši</h3>
@if (IsError == true)
{
    <p>Upppsss!Dogodila se neka greška,kontaktirajte administratora.</p>
}

Dohvaćeni id: @Id
<div>
    <p>Ime: @osoba.Ime</p>
    <p>Prezime: @osoba.Prezime</p>
    <p>Broj telefona: @osoba.BrojTelefona</p>
    <p>Broj mobitela: @osoba.BrojMobitela</p>
    <p>Adresa: @osoba.Adresa</p>
    <p>Grad: @osoba.Grad</p>
    <p>Država: @osoba.Drzava</p>
</div>

<button @onclick="Natrag">Natrag na listu</button>
<button @onclick="Delete">Obriši</button>

@code {
    [Parameter]
    public int Id { get; set; }
    public Osoba osoba = new Osoba();
    public bool IsError = false;

    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync($"https://expertvjezbeapi.azurewebsites.net/api/Osobes/{Id}");

        if (result.IsSuccessStatusCode)
        {
            osoba = await result.Content.ReadFromJsonAsync<Osoba>();
        }
    }
    public void Natrag()
    {
        navManager.NavigateTo("/osobe");
    }

    public async Task Delete()
    {
        var result = await httpClient.DeleteAsync($"https://expertvjezbeapi.azurewebsites.net/api/Osobes/{Id}");
        if (result.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/osobe");
        }
        else
        {
            IsError = true;
        }

    }
}
