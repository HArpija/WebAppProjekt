@page "/osobe"
@using WebAppProjekt.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;

<h4>Osobe</h4>

<label for="search">Pretraži</label>
<input type="text" @bind-value="searchString" id="search" name="search" placeholder="pretraži..."/>
<button @onclick="Pretrazi">Pretraži</button>
<button @onclick="PrikaziSve">Prikaži sve</button>

<table class="table table-hover">
   <thead>
     <tr>
         <th scope="col">Id</th>
          <th scope="col">Ime</th>
           <th scope="col">Prezime</th>
            <th colspan="4">Detalji/Uredi/Dodaj/Obriši</th>
     </tr>
   </thead>
    @foreach(var item in osobe)
    {
        <tbody>
            <tr>
                <td> @item.Id</td>
                  <td> @item.Ime</td>
                    <td> @item.Prezime</td>
                     <td><button class="btn btn-secondary btn-sm" @onclick="()=>Detalji(item.Id)">Detalji</button></td>
                     <td><button class="btn btn-info btn-sm" @onclick="()=>Uredi(item.Id)">Uredi</button></td>
                     <td><button class="btn btn-danger btn-sm" @onclick="Dodaj">Dodaj</button></td>
                     <td><button class="btn btn-check btn-sm" @onclick="()=>Obrisi(item.Id)">Obriši</button></td>
            </tr>
        </tbody>
    }
</table>


@code {
    public List<Osoba> osobe = new List<Osoba>();
    /* protected override void OnInitialized()
     * {
     * base.OnInitialized();
     * }  */

    public string searchString = "";
    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/Osobes");
        if (result.IsSuccessStatusCode)
        {
            osobe = await result.Content.ReadFromJsonAsync<List<Osoba>>();
            osobe = osobe.OrderByDescending(x => x.Id).ToList();
        }
    }
    public void Detalji(int id)
    {
        navManager.NavigateTo($"details/{id}");
    }
    public void Uredi(int id)
    {
        navManager.NavigateTo($"edit/{id}");
    }
    public void Dodaj()
    {
        navManager.NavigateTo($"dodaj");
    }
    public void Obrisi(int id)
    {
        navManager.NavigateTo($"delete/{id}");
    }
    public void Pretrazi()
    {
        osobe = osobe.Where(x =>
            x.Ime.ToLower().Contains(searchString.ToLower()) ||    
            x.Prezime.ToLower().Contains(searchString.ToLower())          
        )
            .ToList();
        StateHasChanged();
    }
    public async Task PrikaziSve()    
    {
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/Osobes");

        if (result.IsSuccessStatusCode)
        {
            osobe = await result.Content.ReadFromJsonAsync<List<Osoba>>();
            osobe = osobe.OrderByDescending(x => x.Id).ToList();
        }
    }
}
